require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

module DealRedemptions
  RSpec.describe Admin::RedemptionsController, :type => :controller do
    routes { DealRedemptions::Engine::routes }

    # This should return the minimal set of attributes required to create a valid
    # Admin::Redemption. As you add validations to Admin::Redemption, be sure to
    # adjust the attributes here as well.
    let(:valid_attributes) {
      FactoryGirl.attributes_for(:redeem_transaction)
    }

    let(:invalid_attributes) {
      FactoryGirl.attributes_for(:redeem_transaction, company_id: '')
    }

    # This should return the minimal set of values that should be in the session
    # in order to pass any filters (e.g. authentication) defined in
    # Admin::RedemptionsController. Be sure to keep this updated too.
    let(:valid_session) { { admin_user_id: 1 } }

    before(:each) do
      @user = FactoryGirl.create(:user)
      @transaction = [FactoryGirl.create(:redeem_transaction),
                      FactoryGirl.create(:redeem_transaction_2),
                      FactoryGirl.create(:redeem_transaction_3)]
    end

    describe "GET #index" do
      it "assigns all transactions as @transactions" do
        get :index, {}, valid_session
        expect(assigns(:transactions)).to eq(@transaction)
      end
    end

    describe "GET #show" do
      before(:each) do
        get :show, {:id => @transaction[0].id}, valid_session
      end

      it "assigns the requested transaction as @transaction" do
        expect(assigns(:transaction)).to eq(@transaction[0])
      end

      it "assigns redemption to @redemption to display user info" do
        expect(assigns(:redemption)).to eq(@transaction[0].redemption[0])
      end
    end

  end
end
